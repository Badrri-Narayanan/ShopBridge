{"version":3,"sources":["util.js","components/Basket.jsx","components/filter.jsx","components/Products.jsx","components/AddProducts.jsx","components/UpdateProduct.jsx","App.js","serviceWorker.js","index.js"],"names":["n","Number","toFixed","toLocaleString","Basket","cartItems","this","props","className","length","map","item","key","id","title","count","price","onClick","event","handleRemoveFromCart","util","reduce","a","c","alert","Component","Filter","htmlFor","value","type","onChange","handleSort","React","Products","productItems","prodlist","product","sytle","height","width","href","handleAddToCart","src","imgUrl","alt","style","color","description","AddProducts","handleChange","setState","target","handleSubmit","fetch","method","headers","body","JSON","stringify","state","imgurl","then","response","json","data","result","preventDefault","window","location","reload","onSubmit","placeholder","required","UpdateProduct","new_title","App","sort","filterList","productAlreadyInCart","forEach","push","localStorage","setItem","filter","el","products","b","filteredProduct","navigation","resp","getItem","parse","isButtonDisabled","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"yOAAe,G,MACK,SAASA,GACrB,MAAO,SAAMC,OAAOD,EAAEE,QAAQ,IAAIC,iBAAmB,MCCxCC,E,uKACP,IAAD,OACEC,EAAaC,KAAKC,MAAlBF,UACP,OACI,yBAAKG,UAAU,oBAEe,IAArBH,EAAUI,OACP,gBAEA,yCACcJ,EAAUI,OADxB,2BAKJJ,EAAUI,OAAS,GACnB,6BACI,4BAEQJ,EAAUK,KAAI,SAAAC,GAAI,OACd,wBAAIC,IAAG,UAAOD,EAAKE,KACf,2BAAIF,EAAKG,OADb,KAEQH,EAAKI,MAFb,MAEuBJ,EAAKK,MAAQL,EAAKI,MACrC,4BACIE,QAAS,SAACC,GAAD,OAAW,EAAKX,MAAMY,qBAAqBD,EAAOP,IAC3DH,UAAU,kBAFd,UAPpB,SAiBQY,EAAoBf,EAAUgB,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAKC,EAAEP,MAAMO,EAAER,QAAQ,IAE1E,4BACIP,UAAU,kBACVS,QAAS,kBAAMO,MAAM,2BAFzB,mB,GAlCYC,aCDfC,E,uKACP,IAAD,OACL,OACI,yBAAKlB,UAAU,OACX,yBAAKA,UAAU,YAAf,UACQF,KAAKC,MAAMQ,MADnB,oBAGA,yBAAKP,UAAU,YACX,2BAAOmB,QAAQ,IAAf,YAEI,4BACInB,UAAU,eACVoB,MAAOtB,KAAKC,MAAMsB,KAClBC,SAAU,SAACZ,GAAD,OAAW,EAAKX,MAAMwB,WAAWb,KAE3C,4BAAQU,MAAM,IAAd,UACA,4BAAQA,MAAM,UAAd,qBACA,4BAAQA,MAAM,WAAd,6B,GAjBQI,IAAMP,WCoC3BQ,E,uKAlCD,IAAD,OACCC,EAAe5B,KAAKC,MAAM4B,SAASzB,KAAK,SAAA0B,GAAO,OAC7C,yBAAK5B,UAAU,WAAWI,IAAKwB,EAAQvB,GAAIwB,MAAO,CAACC,OAAQ,QAASC,MAAO,UACvE,yBAAK/B,UAAU,yBACX,uBAAGgC,KAAI,WAAMJ,EAAQvB,IAAMI,QAAS,SAACC,GAAD,OAAW,EAAKX,MAAMkC,gBAAgBvB,EAAOkB,KAC7E,yBACIM,IAAKN,EAAQO,OACbC,IAAKR,EAAQtB,MACb+B,MAAO,CAACN,MAAO,QAASD,OAAQ,WAEpC,uBAAGO,MAAO,CAACC,MAAO,gBAAiBV,EAAQtB,QAE/C,6BACI,0CACA,2BAAIsB,EAAQW,aACZ,6BACA,2BAAI3B,EAAoBgB,EAAQpB,QAChC,4BACIR,UAAU,kBACVS,QAAS,SAACC,GAAD,OAAW,EAAKX,MAAMkC,gBAAgBvB,EAAOkB,KAF1D,qBASpB,OACI,yBAAK5B,UAAU,OACV0B,O,GA7BMF,IAAMP,W,OCDRuB,E,kDACjB,WAAYzC,GAAQ,IAAD,8BACf,cAAMA,IAUV0C,aAAe,SAAC/B,GACZ,EAAKgC,SAAL,eAAgBhC,EAAMiC,OAAOtC,GAAMK,EAAMiC,OAAOvB,SAZjC,EAenBwB,aAAe,SAAClC,GACZmC,MAAM,oCAAqC,CAChDC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACpB,MAAS,EAAKC,MAAM7C,MACpB,YAAe,EAAK6C,MAAMZ,YACd,MAAS,EAAKY,MAAM3C,MACpB,OAAU,EAAK2C,MAAMC,WAEhCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC5BF,MAAK,SAAAG,GACgB,UAATA,GACC,EAAKd,SAAS,CAACe,OAAQD,IACvB9C,EAAMgD,mBAEN1C,MAAMwC,GACNG,OAAOC,SAASC,cA9BxB,EAAKV,MAAQ,CACT7C,MAAO,GACPiC,YAAa,GACb/B,MAAO,GACP4C,OAAQ,GACRK,OAAQ,IAPG,E,qDAsCjB,OACE,0BAAMK,SAAUhE,KAAK8C,cACjB,4BAAK9C,KAAKqD,MAAMM,QAChB,yBAAKzD,UAAU,cACX,sDACA,2BACIqB,KAAK,OACLrB,UAAU,eACVK,GAAG,QACHe,MAAOtB,KAAKqD,MAAM7C,MAClBgB,SAAUxB,KAAK2C,aACfsB,YAAY,QAChBC,UAAQ,KAEZ,yBAAKhE,UAAU,cACX,mDACA,2BACIqB,KAAK,OACLrB,UAAU,eACVK,GAAG,cACHe,MAAOtB,KAAKqD,MAAMZ,YAClBjB,SAAUxB,KAAK2C,aACfsB,YAAY,cAChBC,UAAQ,KAEZ,yBAAKhE,UAAU,cACX,8CACA,2BACIqB,KAAK,SACLrB,UAAU,eACVK,GAAG,QACHe,MAAOtB,KAAKqD,MAAM3C,MAClBc,SAAUxB,KAAK2C,aACfsB,YAAY,QAChBC,UAAQ,KAEZ,yBAAKhE,UAAU,cACX,kDACA,2BACIqB,KAAK,OACLrB,UAAU,eACVK,GAAG,SACHe,MAAOtB,KAAKqD,MAAMC,OAClB9B,SAAUxB,KAAK2C,aACfsB,YAAY,YAChBC,UAAQ,KAEZ,2BAAO3C,KAAK,SAASD,MAAM,gB,GAtFEI,IAAMP,WCA1BgD,E,kDACb,WAAYlE,GAAQ,IAAD,8BACf,cAAMA,IAWV0C,aAAe,SAAC/B,GACZ,EAAKgC,SAAL,eAAgBhC,EAAMiC,OAAOtC,GAAMK,EAAMiC,OAAOvB,SAbjC,EAgBnBwB,aAAe,SAAClC,GACZ,EAAKgC,SAAS,CAACe,OAAO,KAEtBZ,MAAM,wBAAyB,CAC3BC,OAAQ,MACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACjB,MAAS,EAAKC,MAAM7C,MACpB,UAAa,EAAK6C,MAAMe,UACxB,YAAe,EAAKf,MAAMZ,YAC1B,MAAS,EAAKY,MAAM3C,MACpB,OAAU,EAAK2C,MAAMC,WAE1BC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC5BF,MAAK,SAAAG,GACU,OAATA,GACC,EAAKd,SAAS,CAACe,OAAQD,IACvB9C,EAAMgD,mBAEN1C,MAAMwC,GACNG,OAAOC,SAASC,cAlCxB,EAAKV,MAAQ,CACT7C,MAAO,GACP4D,UAAW,GACX3B,YAAa,GACb/B,MAAO,GACP4C,OAAQ,GACRK,OAAQ,IARG,E,qDA0CnB,OACI,0BAAMK,SAAUhE,KAAK8C,cACjB,4BAAK9C,KAAKqD,MAAMM,QAChB,yBAAKzD,UAAU,cACX,sFACA,2BACIqB,KAAK,OACLrB,UAAU,eACVK,GAAG,QACHe,MAAOtB,KAAKqD,MAAM7C,MAClBgB,SAAUxB,KAAK2C,aACfsB,YAAY,QAChBC,UAAQ,KAEZ,6BACA,yBAAKhE,UAAU,cACX,sEACA,2BACIqB,KAAK,OACLrB,UAAU,eACVK,GAAG,YACHe,MAAOtB,KAAKqD,MAAMe,UAClB5C,SAAUxB,KAAK2C,aACfsB,YAAY,WAGpB,yBAAK/D,UAAU,cACX,mEACA,2BACIqB,KAAK,OACLrB,UAAU,eACVK,GAAG,cACHe,MAAOtB,KAAKqD,MAAMZ,YAClBjB,SAAUxB,KAAK2C,aACfsB,YAAY,iBAGpB,yBAAK/D,UAAU,cACX,8DACA,2BACIqB,KAAK,SACLrB,UAAU,eACVK,GAAG,QACHe,MAAOtB,KAAKqD,MAAM3C,MAClBc,SAAUxB,KAAK2C,aACfsB,YAAY,WAGpB,yBAAK/D,UAAU,cACX,kEACA,2BACIqB,KAAK,OACLrB,UAAU,eACVK,GAAG,SACHe,MAAOtB,KAAKqD,MAAMC,OAClB9B,SAAUxB,KAAK2C,aACfsB,YAAY,eAGpB,2BAAO1C,KAAK,SAASD,MAAM,gB,GAtGAI,IAAMP,WCgIlCkD,E,kDAxHb,aAAe,IAAD,8BACZ,gBASF5C,WAAa,SAACb,GACZ,EAAKgC,SAAS,CAAC0B,KAAM1D,EAAMiC,OAAOvB,QAClC,EAAKiD,cAZO,EAcdpC,gBAAkB,SAACvB,EAAOkB,GACxB,EAAKc,UAAS,SAAAS,GACZ,IAAMtD,EAAY,EAAKsD,MAAMtD,UACzByE,GAAuB,EAW3B,OAVAzE,EAAU0E,SAAQ,SAAApE,GACbA,EAAKE,KAAOuB,EAAQvB,KACrBiE,GAAuB,EACvBnE,EAAKI,YAGL+D,GACFzE,EAAU2E,KAAV,2BAAmB5C,GAAnB,IAA4BrB,MAAM,KAEpCkE,aAAaC,QAAQ,YAAazB,KAAKC,UAAUrD,IAC1CA,MA5BG,EA+Bdc,qBAAuB,SAACD,EAAOkB,GAC7B,EAAKc,UAAS,SAAAS,GACZ,IAAMtD,EAAY,EAAKsD,MAAMtD,UAAU8E,QAAO,SAAAC,GAAE,OAAIA,EAAGvE,KAAOuB,EAAQvB,MAEtE,OADAoE,aAAaC,QAAQ,YAAazB,KAAKC,UAAUrD,IAC1C,CAACA,iBAnCE,EAsCdwE,WAAa,WACX,EAAK3B,UAAS,SAAAS,GAQZ,MAPuB,KAApB,EAAKA,MAAMiB,KACZ,EAAKjB,MAAM0B,SAAST,MAAK,SAACtD,EAAEgE,GAAH,MACF,WAApB,EAAK3B,MAAMiB,KAAoBtD,EAAEN,MAAQsE,EAAEtE,MAAM,GAAG,EAAIM,EAAEN,MAAQsE,EAAEtE,MAAM,GAAG,KAGhF,EAAK2C,MAAM0B,SAAST,MAAK,SAACtD,EAAEgE,GAAH,OAAUhE,EAAET,GAAKyE,EAAEzE,GAAG,GAAG,KAE7C,CAAC0E,gBAAkB,EAAK5B,MAAM0B,cA7CvC,EAAK1B,MAAQ,CACX0B,SAAW,GACXE,gBAAkB,GAClBX,KAAM,GACNvE,UAAW,GACXmF,WAAY,QAPF,E,gEAkDO,IAAD,OAElBnC,MAAM,yBACJQ,MAAK,SAAA4B,GAAI,OAAIA,EAAK1B,UAClBF,MAAK,SAAA1B,GACL,EAAKe,SAAS,CAACmC,SAAWlD,OAGzB8C,aAAaS,QAAQ,cACtBpF,KAAK4C,SAAS,CAAC7C,UAAWoD,KAAKkC,MAAMV,aAAaS,QAAQ,kB,+BAGpD,IAAD,OACP,OACI,yBAAKlF,UAAU,aACb,+CACA,6BACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,YACb,uBAAGgC,KAAK,QAAQvB,QAAS,WAAQ,EAAKiC,SAAS,CAACsC,WAAY,WAC1D,qCAGJ,yBAAKhF,UAAU,YACb,uBAAGgC,KAAK,UAAUvB,QAAS,WAAQ,EAAKiC,SAAS,CAACsC,WAAY,aAC5D,wCAGJ,yBAAKhF,UAAU,YACb,uBAAGgC,KAAK,UAAUvB,QAAS,WAAQ,EAAKiC,SAAS,CAACsC,WAAY,aAC5D,wCAKuB,SAA1BlF,KAAKqD,MAAM6B,WACV,6BACE,kBAAC,EAAD,CACEzD,WAAYzB,KAAKyB,WACjBhB,MAAOT,KAAKqD,MAAM0B,SAAS5E,SAE7B,6BACA,kBAAC,EAAD,CACE0B,SAAY7B,KAAKqD,MAAM0B,SACvBO,iBAAkBtF,KAAKqD,MAAMiC,iBAC7BnD,gBAAmBnC,KAAKmC,mBAID,WAA1BnC,KAAKqD,MAAM6B,WACZ,kBAAC,EAAD,MAEA,kBAAC,EAAD,OAIN,yBAAKhF,UAAU,YACb,kBAAC,EAAD,CACEH,UAAWC,KAAKqD,MAAMtD,UACtBc,qBAAsBb,KAAKa,8B,GAhHzBa,IAAMP,WCGJoE,QACW,cAA7B1B,OAAOC,SAAS0B,UAEe,UAA7B3B,OAAOC,SAAS0B,UAEhB3B,OAAOC,SAAS0B,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzC,MAAK,SAAA0C,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.16e5bd47.chunk.js","sourcesContent":["export default {\r\n    formatCurrency: function(n) {\r\n        return \"â‚¹\" + Number(n.toFixed(2)).toLocaleString() + \" \";\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport util from '../util';\r\n\r\nexport default class Basket extends Component {\r\n    render() {\r\n        const {cartItems} = this.props;\r\n        return (\r\n            <div className=\"alert alert-info\">\r\n                {\r\n                    (cartItems.length === 0)?\r\n                        \"Cart is Empty\"\r\n                        :\r\n                        <div>\r\n                            You have {cartItems.length} products in the basket\r\n                        </div>\r\n                }\r\n                {\r\n                    cartItems.length > 0 &&\r\n                    <div>\r\n                        <ul>\r\n                            {\r\n                                cartItems.map(item =>\r\n                                    <li key = {`${item.id}`}>\r\n                                        <b>{item.title}</b>\r\n                                         X {item.count} = {item.price * item.count}\r\n                                        <button \r\n                                            onClick={(event) => this.props.handleRemoveFromCart(event, item)}\r\n                                            className='btn btn-danger'\r\n                                        >X</button>\r\n                                    </li>\r\n                                )\r\n                            }\r\n                        </ul>\r\n                        Total:\r\n                        {\r\n                            util.formatCurrency(cartItems.reduce((a, c) => a + (c.price*c.count), 0))\r\n                        }\r\n                        <button \r\n                            className='btn btn-primary'\r\n                            onClick={() => alert(\"Proceeding to Payment\")}\r\n                        >Check Out</button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default class Filter extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='row'>\r\n                <div className='col-md-3'>\r\n                    {`${this.props.count} products found`}\r\n                </div>\r\n                <div className='col-md-3'>\r\n                    <label htmlFor=\"\">\r\n                        Order By:\r\n                        <select \r\n                            className='form-control' \r\n                            value={this.props.type}\r\n                            onChange={(event) => this.props.handleSort(event)}\r\n                        >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"lowest\">lowest to highest</option>\r\n                            <option value=\"highest\">highest to lowest</option>\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport util from '../util';\r\n\r\nclass Products extends React.Component {\r\n    render() {\r\n        const productItems = this.props.prodlist.map( product => (\r\n                <div className='col-md-4' key={product.id} sytle={{height: '900px', width: '550px'}}>\r\n                    <div className='thumbnail text-center'>\r\n                        <a href={`#${product.id}`} onClick={(event) => this.props.handleAddToCart(event, product)}>\r\n                            <img \r\n                                src={product.imgUrl}\r\n                                alt={product.title}\r\n                                style={{width: \"500px\", height: \"250px\"}}\r\n                            />\r\n                            <p style={{color: \"lightyellow\"}}>{product.title}</p>\r\n                        </a>\r\n                        <div>\r\n                            <p>Description</p>\r\n                            <p>{product.description}</p>\r\n                            <hr/>\r\n                            <b>{util.formatCurrency(product.price)}</b>\r\n                            <button \r\n                                className=\"btn btn-primary\"\r\n                                onClick={(event) => this.props.handleAddToCart(event, product)}\r\n                            >Add to Cart</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        );\r\n        return (\r\n            <div className='row'>\r\n                {productItems}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Products;","import React from 'react';\r\n\r\nexport default class AddProducts extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            description: '',\r\n            price: '',\r\n            imgurl: '',\r\n            result: '',\r\n        };\r\n    }\r\n  \r\n    handleChange = (event) => {\r\n        this.setState({[event.target.id] : event.target.value});\r\n    }\r\n  \r\n    handleSubmit = (event) => {\r\n        fetch('https://shopbridge.herokuapp.com/', {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t'title': this.state.title,\r\n\t\t\t\t'description': this.state.description,\r\n                'price': this.state.price,\r\n                'imgurl': this.state.imgurl,\r\n\t\t\t})\r\n\t\t}).then(response => response.json())\r\n\t\t.then(data => {\r\n            if(data !== \"added\") {\r\n                this.setState({result: data});\r\n                event.preventDefault();\r\n            } else {\r\n                alert(data);\r\n                window.location.reload();\r\n            }\r\n        });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <form onSubmit={this.handleSubmit}>\r\n            <h3>{this.state.result}</h3>\r\n            <div className=\"form-group\">\r\n                <label>Enter Product Title</label>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\" \r\n                    id=\"title\"\r\n                    value={this.state.title} \r\n                    onChange={this.handleChange} \r\n                    placeholder=\"title\" \r\n                required/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Enter Desciption</label>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\" \r\n                    id=\"description\" \r\n                    value={this.state.description} \r\n                    onChange={this.handleChange}\r\n                    placeholder=\"description\" \r\n                required/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Enter Price</label>\r\n                <input \r\n                    type=\"number\" \r\n                    className=\"form-control\" \r\n                    id=\"price\" \r\n                    value={this.state.price} \r\n                    onChange={this.handleChange} \r\n                    placeholder=\"Price\" \r\n                required/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Enter Image URL</label>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\" \r\n                    id=\"imgurl\" \r\n                    value={this.state.imgurl} \r\n                    onChange={this.handleChange} \r\n                    placeholder=\"image url\" \r\n                required/>\r\n            </div>\r\n            <input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nexport default class UpdateProduct extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                title: '',\r\n                new_title: '',\r\n                description: '',\r\n                price: '',\r\n                imgurl: '',\r\n                result: '',\r\n            };\r\n        }\r\n    \r\n        handleChange = (event) => {\r\n            this.setState({[event.target.id] : event.target.value});\r\n        }\r\n    \r\n        handleSubmit = (event) => {\r\n            this.setState({result:''});\r\n            //fetch('https://guarded-garden-90311.herokuapp.com/register', {\r\n            fetch(\"http://localhost:5000\", {\r\n                method: 'put',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    'title': this.state.title,\r\n                    'new_title': this.state.new_title,\r\n                    'description': this.state.description,\r\n                    'price': this.state.price,\r\n                    'imgurl': this.state.imgurl,\r\n                })\r\n            }).then(response => response.json())\r\n            .then(data => {\r\n                if(data !== \"ok\") {\r\n                    this.setState({result: data});\r\n                    event.preventDefault();\r\n                } else {\r\n                    alert(data);\r\n                    window.location.reload();\r\n                }\r\n            });\r\n        }\r\n    \r\n        render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <h3>{this.state.result}</h3>\r\n                <div className=\"form-group\">\r\n                    <h2>Enter the Product Title you want to Edit/Update below:</h2>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        id=\"title\"\r\n                        value={this.state.title} \r\n                        onChange={this.handleChange} \r\n                        placeholder=\"title\" \r\n                    required/>\r\n                </div>\r\n                <hr/>\r\n                <div className=\"form-group\">\r\n                    <label>Enter New Product Title (*Optional)</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        id=\"new_title\"\r\n                        value={this.state.new_title} \r\n                        onChange={this.handleChange} \r\n                        placeholder=\"title\" \r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Enter New Desciption (*Optional)</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        id=\"description\" \r\n                        value={this.state.description} \r\n                        onChange={this.handleChange}\r\n                        placeholder=\"description\" \r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Enter New Price (*Optional)</label>\r\n                    <input \r\n                        type=\"number\" \r\n                        className=\"form-control\" \r\n                        id=\"price\" \r\n                        value={this.state.price} \r\n                        onChange={this.handleChange} \r\n                        placeholder=\"Price\" \r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Enter New Image URL (*Optional)</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        id=\"imgurl\" \r\n                        value={this.state.imgurl} \r\n                        onChange={this.handleChange} \r\n                        placeholder=\"image url\" \r\n                    />\r\n                </div>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport Basket from './components/Basket';\nimport Filter from './components/filter';\nimport Products from './components/Products';\nimport AppProducts from './components/AddProducts';\nimport UpdateProduct from './components/UpdateProduct';\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      products : [],\n      filteredProduct : [],\n      sort: '',\n      cartItems: [],\n      navigation: 'home',\n    }\n  }\n  handleSort = (event) => {\n    this.setState({sort: event.target.value});\n    this.filterList();\n  }\n  handleAddToCart = (event, product) => {\n    this.setState(state => {\n      const cartItems = this.state.cartItems;\n      let productAlreadyInCart = false;\n      cartItems.forEach(item => {\n        if(item.id === product.id ) {\n          productAlreadyInCart = true;\n          item.count++;\n        }\n      });\n      if(!productAlreadyInCart) {\n        cartItems.push({...product, count:1})\n      }\n      localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n      return cartItems;\n    })\n  }\n  handleRemoveFromCart = (event, product) => {\n    this.setState(state => {\n      const cartItems = this.state.cartItems.filter(el => el.id !== product.id);\n      localStorage.setItem('cartItems', JSON.stringify(cartItems));\n      return {cartItems};\n    })\n  }\n  filterList = () => {\n    this.setState(state => {\n      if(this.state.sort !== '') {\n        this.state.products.sort((a,b) => \n          (this.state.sort === \"lowest\")?(a.price < b.price?1:-1):(a.price > b.price?1:-1)\n        )\n      } else {\n        this.state.products.sort((a,b) => (a.id < b.id?1:-1))\n      }\n      return {filteredProduct : this.state.products}\n    })\n  }\n  componentDidMount() {\n    //fetch(\"https://shopbridge.herokuapp.com/\")\n    fetch(\"http://localhost:5000\")\n     .then(resp => resp.json())\n     .then(prodlist => {\n      this.setState({products : prodlist});\n     });\n\n    if(localStorage.getItem('cartItems')) {\n      this.setState({cartItems: JSON.parse(localStorage.getItem('cartItems'))});\n    }\n  }\n  render() {\n    return (\n        <div className='container'>\n          <h1>Shop Bridge App</h1>\n          <hr/>\n          <div className='row'>\n            <div className='col-md-8'>\n              <div className=\"row alert alert-info\">\n                <div className=\"col-md-4\">\n                  <a href=\"#home\" onClick={() => { this.setState({navigation: 'home'}) } }>\n                    <b>Home</b>\n                  </a>\n                </div>\n                <div className=\"col-md-4\">\n                  <a href=\"#addNew\" onClick={() => { this.setState({navigation: 'addNew'}) } }>\n                    <b>Add New</b>\n                  </a>\n                </div>\n                <div className=\"col-md-4\">\n                  <a href=\"#update\" onClick={() => { this.setState({navigation: 'update'}) } }>\n                    <b>Update</b>\n                  </a>\n                </div>\n              </div>\n              {\n                (this.state.navigation === 'home')?\n                  <div>\n                    <Filter \n                      handleSort={this.handleSort}\n                      count={this.state.products.length}\n                    />\n                    <hr/>\n                    <Products \n                      prodlist = {this.state.products}\n                      isButtonDisabled={this.state.isButtonDisabled}\n                      handleAddToCart = {this.handleAddToCart} \n                    />\n                  </div>\n                  :\n                  (this.state.navigation === 'addNew')?\n                  <AppProducts/>\n                  :\n                  <UpdateProduct/>\n              }\n\n            </div>\n            <div className='col-md-4'>\n              <Basket \n                cartItems={this.state.cartItems}\n                handleRemoveFromCart={this.handleRemoveFromCart} \n              />\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}