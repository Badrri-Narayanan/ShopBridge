{"version":3,"sources":["util.js","components/Basket.jsx","components/filter.jsx","components/Products.jsx","dbdata.js","App.js","serviceWorker.js","index.js"],"names":["n","Number","toFixed","toLocaleString","Basket","cartItems","this","props","className","length","map","item","key","id","title","count","price","onClick","event","handleRemoveFromCart","util","reduce","a","c","alert","Component","Filter","htmlFor","value","type","onChange","handleSort","React","Products","productItems","prodlist","product","href","handleAddToCart","src","img","alt","style","width","height","color","products","App","setState","sort","target","filterList","state","productAlreadyInCart","forEach","push","localStorage","setItem","JSON","stringify","filter","el","b","filteredProduct","getItem","parse","isButtonDisabled","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ca580345.chunk.js","sourcesContent":["export default {\r\n    formatCurrency: function(n) {\r\n        return \"â‚¹\" + Number(n.toFixed(2)).toLocaleString() + \" \";\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport util from '../util';\r\n\r\nexport default class Basket extends Component {\r\n    render() {\r\n        const {cartItems} = this.props;\r\n        return (\r\n            <div className=\"alert alert-info\">\r\n                {\r\n                    (cartItems.length === 0)?\r\n                        \"Cart is Empty\"\r\n                        :\r\n                        <div>\r\n                            You have {cartItems.length} products in the basket\r\n                        </div>\r\n                }\r\n                {\r\n                    cartItems.length > 0 &&\r\n                    <div>\r\n                        <ul>\r\n                            {\r\n                                cartItems.map(item =>\r\n                                    <li key = {`${item.id}`}>\r\n                                        <b>{item.title}</b>\r\n                                         X {item.count} = {item.price * item.count}\r\n                                        <button \r\n                                            onClick={(event) => this.props.handleRemoveFromCart(event, item)}\r\n                                            className='btn btn-danger'\r\n                                        >X</button>\r\n                                    </li>\r\n                                )\r\n                            }\r\n                        </ul>\r\n                        Total:\r\n                        {\r\n                            util.formatCurrency(cartItems.reduce((a, c) => a + (c.price*c.count), 0))\r\n                        }\r\n                        <button \r\n                            className='btn btn-primary'\r\n                            onClick={() => alert(\"Proceeding to Payment\")}\r\n                        >Check Out</button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default class Filter extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='row'>\r\n                <div className='col-md-3'>\r\n                    {`${this.props.count} products found`}\r\n                </div>\r\n                <div className='col-md-3'>\r\n                    <label htmlFor=\"\">\r\n                        Order By:\r\n                        <select \r\n                            className='form-control' \r\n                            value={this.props.type}\r\n                            onChange={(event) => this.props.handleSort(event)}\r\n                        >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"lowest\">lowest to highest</option>\r\n                            <option value=\"highest\">highest to lowest</option>\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport util from '../util';\r\n\r\nclass Products extends React.Component {\r\n    render() {\r\n        const productItems = this.props.prodlist.map( product => (\r\n                <div className='col-md-4' key={product.id}>\r\n                    <div className='thumbnail text-center'>\r\n                        <a href={`#${product.id}`} onClick={(event) => this.props.handleAddToCart(event, product)}>\r\n                            <img \r\n                                src={product.img}\r\n                                alt={product.title}\r\n                                style={{width: \"500px\", height: \"250px\"}}\r\n                            />\r\n                            <p style={{color: \"lightyellow\"}}>{product.title}</p>\r\n                        </a>\r\n                        <div>\r\n                            <b>{util.formatCurrency(product.price)}</b>\r\n                            <button \r\n                                className=\"btn btn-primary\"\r\n                                onClick={(event) => this.props.handleAddToCart(event, product)}\r\n                            >Add to Cart</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        );\r\n        return (\r\n            <div className='row'>\r\n                {productItems}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Products;","export const products = [\r\n        {\r\n            \"id\": 1,\r\n            \"title\": \"Jeans\",\r\n            \"price\": 800,\r\n            \"img\": \"https://5.imimg.com/data5/AQ/HD/MY-38850010/jeans-500x500.jpg\",\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"title\": \"T-Shirt\",\r\n            \"price\": 700,\r\n            \"img\": \"https://5.imimg.com/data5/VT/DS/MY-17368652/plain-round-neck-tshirt-500x500.jpg\",\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"title\": \"Shoes\",\r\n            \"price\": 600,\r\n            \"img\": \"https://assets.ajio.com/medias/sys_master/root/ajio/catalog/5ef38fcbf997dd433b43d714/-473Wx593H-461205998-black-MODEL.jpg\",\r\n        }\r\n    ]\r\nexport default products;","import React from 'react';\nimport './App.css';\nimport Basket from './components/Basket';\nimport Filter from './components/filter';\nimport Products from './components/Products';\nimport prodlist from './dbdata';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      products : [],\n      filteredProduct : [],\n      sort: '',\n      cartItems: [],\n    }\n  }\n  handleSort = (event) => {\n    this.setState({sort: event.target.value});\n    this.filterList();\n  }\n  handleAddToCart = (event, product) => {\n    this.setState(state => {\n      const cartItems = this.state.cartItems;\n      let productAlreadyInCart = false;\n      cartItems.forEach(item => {\n        if(item.id === product.id ) {\n          productAlreadyInCart = true;\n          item.count++;\n        }\n      });\n      if(!productAlreadyInCart) {\n        cartItems.push({...product, count:1})\n      }\n      localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n      return cartItems;\n    })\n  }\n  handleRemoveFromCart = (event, product) => {\n    this.setState(state => {\n      const cartItems = this.state.cartItems.filter(el => el.id !== product.id);\n      localStorage.setItem('cartItems', JSON.stringify(cartItems));\n      return {cartItems};\n    })\n  }\n  filterList = () => {\n    this.setState(state => {\n      if(this.state.sort !== '') {\n        this.state.products.sort((a,b) => \n          (this.state.sort === \"lowest\")?(a.price < b.price?1:-1):(a.price > b.price?1:-1)\n        )\n      } else {\n        this.state.products.sort((a,b) => (a.id < b.id?1:-1))\n      }\n      return {filteredProduct : this.state.products}\n    })\n  }\n  componentDidMount() {\n    //fetch from Django\n    this.setState({products : prodlist});\n    if(localStorage.getItem('cartItems')) {\n      this.setState({cartItems: JSON.parse(localStorage.getItem('cartItems'))});\n    }\n  }\n  render() {\n    return (\n        <div className='container'>\n          <h1>Shop Bridge App</h1>\n          <hr/>\n          <div className='row'>\n            <div className='col-md-8'>\n              <Filter \n                handleSort={this.handleSort}\n                count={this.state.products.length}\n              />\n              <hr/>\n              <Products \n                prodlist = {this.state.products}\n                isButtonDisabled={this.state.isButtonDisabled}\n                handleAddToCart = {this.handleAddToCart} \n              />\n            </div>\n            <div className='col-md-4'>\n              <Basket \n                cartItems={this.state.cartItems}\n                handleRemoveFromCart={this.handleRemoveFromCart} \n              />\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}